{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "bloggio-api",
    "description": "RestfulAPI for bloggio ",
    "termsOfService": "https://www.termsfeed.com/live/ed8b4e15-b05a-41d6-b12b-920a89756f29",
    "contact": {
      "name": "omerrfarukcapur@gmail.com",
      "email": "omerrfarukcapur@gmail.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "127.0.0.1:8000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Simple Token Authentication * Example: <b>Token ...tokenKey...</b>"
    },
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "JWT Authentication * Example: <b>Bearer ...accessToken...</b>"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "api/${VERSION}/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "description": "Register with valid firstName, lastName, email and password",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Test@1234"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/verify-email/{token}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verification",
        "description": "Verify user email with a verification token",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Verification token received via email"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login with email and password for get simpleToken and JWT",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "testUser@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Test@1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "SimpleToken: Logout",
        "description": "Delete simple token key and put JWT to the Blacklist.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "JWT: Refresh",
        "description": "Refresh accessToken with  ",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bearer": {
                  "type": "object",
                  "properties": {
                    "refresh": {
                      "type": "string",
                      "example": "...refreshToken..."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/forgot": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot",
        "description": "Request a url with email to reset password",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "testUser@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/reset/{token}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "JWT: Reset",
        "description": "Reset password with email, new password, and refresh token.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Refresh token received via email"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "testUser@gmail.com"
                },
                "newPassword": {
                  "type": "string",
                  "example": "newPassword@123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/google": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/auth/google/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Successful Authentication Callback",
        "description": "Handles successful authentication, generates tokens, and redirects the user to the client URL with user data encoded in the query parameters.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects to the client URL with user data",
            "headers": {
              "Location": {
                "description": "The URL to which the user is redirected after successful authentication.",
                "schema": {
                  "type": "string",
                  "example": "https://your-client-url.com/auth/success?provider=google&user=%7B%22error%22:false,%22message%22:%22You%20are%20successfully%20logged%20in!%22,%22bearer%22:%7B%22access%22:%22access-token%22,%22refresh%22:%22refresh-token%22%7D,%22token%22:%22token-data%22,%22user%22:%7B%22id%22:%22user-id%22,%22name%22:%22John%20Doe%22%7D%7D"
                }
              }
            }
          },
          "400": {
            "description": "Bad request if the user is not authenticated",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed or user not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "api/${VERSION}/blogs/": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "summary": "List Blogs",
        "description": "\r  You can use <u>filter[] & search[] & sort[] & page & limit</u> queries with endpoint.\r  <ul> Examples:\r   <li>URL/?<b>filter[field1]=value1&filter[field2]=value2</b></li>\r   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r   <li>URL/?<b>sort[field1]=asc&sort[field2]=desc</b></li>\r   <li>URL/?<b>limit=10&page=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Blogs"
        ],
        "summary": "Create Blog",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Blog Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/blogs/{id}/like": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/blogs/{id}/save": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/blogs/{id}": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "summary": "Get Single Blog",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Blog Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Blogs"
        ],
        "summary": "Update Blog",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Blog Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Blogs"
        ],
        "summary": "Delete Blog",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Blog Id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Blogs"
        ],
        "summary": "Update Blog",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Blog Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "\r  You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Handles user feedback submission by validating input and sending feedback via email.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Name of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        },
                        "description": {
                          "type": "string",
                          "example": "Email address of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Subject of the feedback"
                        },
                        "example": {
                          "type": "string",
                          "example": "Feedback Subject"
                        }
                      }
                    },
                    "feedback": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Feedback message"
                        },
                        "example": {
                          "type": "string",
                          "example": "This is a feedback message."
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name",
                    "email",
                    "feedback"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Feedback submission data"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string",
            "example": "60c72b2f9f1b2c6f4c8e9b6a"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/users/feedback": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Submit Feedback",
        "description": "Handles user feedback submission by validating input and sending feedback via email.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Feedback submission data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Name of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        },
                        "description": {
                          "type": "string",
                          "example": "Email address of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Subject of the feedback"
                        },
                        "example": {
                          "type": "string",
                          "example": "Feedback Subject"
                        }
                      }
                    },
                    "feedback": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Feedback message"
                        },
                        "example": {
                          "type": "string",
                          "example": "This is a feedback message."
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name",
                    "email",
                    "feedback"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "api/${VERSION}/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Single User",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Handles user feedback submission by validating input and sending feedback via email.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Name of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        },
                        "description": {
                          "type": "string",
                          "example": "Email address of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Subject of the feedback"
                        },
                        "example": {
                          "type": "string",
                          "example": "Feedback Subject"
                        }
                      }
                    },
                    "feedback": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Feedback message"
                        },
                        "example": {
                          "type": "string",
                          "example": "This is a feedback message."
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name",
                    "email",
                    "feedback"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Feedback submission data"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string",
            "example": "60c72b2f9f1b2c6f4c8e9b6a"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Handles user feedback submission by validating input and sending feedback via email.",
        "parameters": [
          {
            "name": "VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Name of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        },
                        "description": {
                          "type": "string",
                          "example": "Email address of the user"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Subject of the feedback"
                        },
                        "example": {
                          "type": "string",
                          "example": "Feedback Subject"
                        }
                      }
                    },
                    "feedback": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Feedback message"
                        },
                        "example": {
                          "type": "string",
                          "example": "This is a feedback message."
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name",
                    "email",
                    "feedback"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Feedback submission data"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string",
            "example": "60c72b2f9f1b2c6f4c8e9b6a"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Blog": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "ref": {
              "type": "string",
              "example": "User"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "index": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "categoryId": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "ref": {
              "type": "string",
              "example": "Category"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "index": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "title": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "maxlength": {
              "type": "number",
              "example": 125
            }
          }
        },
        "content": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "maxlength": {
              "type": "number",
              "example": 10000
            }
          }
        },
        "image": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "string",
              "example": "https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg?w=360"
            }
          }
        },
        "isPublish": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "likes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "User"
              }
            }
          }
        },
        "countOfVisitors": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "number",
              "example": 0
            },
            "min": {
              "type": "number",
              "example": 0
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "minlength": {
              "type": "number",
              "example": 2
            },
            "maxlength": {
              "type": "number",
              "example": 50
            },
            "trim": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "lastName": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "minlength": {
              "type": "number",
              "example": 2
            },
            "maxlength": {
              "type": "number",
              "example": 50
            },
            "trim": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "username": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "minlength": {
              "type": "number",
              "example": 3
            },
            "maxlength": {
              "type": "number",
              "example": 15
            },
            "trim": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "googleId": {
          "type": "function"
        },
        "avatar": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "string",
              "example": "https://t4.ftcdn.net/jpg/05/49/98/39/360_F_549983970_bRCkYfk0P6PP5fKbMhZMIb07mCJ6esXL.jpg"
            }
          }
        },
        "email": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "unique": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "password": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "saved": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Blog"
              }
            }
          }
        },
        "isActive": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "isAdmin": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "boolean",
              "example": false
            }
          }
        },
        "isStaff": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "default": {
              "type": "boolean",
              "example": false
            }
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "ref": {
              "type": "string",
              "example": "Blog"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "index": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "userId": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "ref": {
              "type": "string",
              "example": "User"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "index": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "comment": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "maxlength": {
              "type": "number",
              "example": 1000
            }
          }
        },
        "likes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "User"
              }
            }
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "properties": {
            "type": {
              "type": "function"
            },
            "required": {
              "type": "boolean",
              "example": true
            },
            "trim": {
              "type": "boolean",
              "example": true
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Token": []
    },
    {
      "Bearer": []
    }
  ]
}